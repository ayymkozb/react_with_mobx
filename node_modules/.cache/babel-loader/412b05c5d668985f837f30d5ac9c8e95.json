{"ast":null,"code":"import _initializerDefineProperty from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\n// import logo from './logo.svg';\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\nimport { observable } from 'mobx';\nlet Users = (_class = (_temp = class Users {\n  constructor() {\n    _initializerDefineProperty(this, \"arr\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"edit\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"currentEditUser\", _descriptor3, this);\n  }\n\n  currentEditField(user) {\n    this.edit = true;\n    this.currentEditUser = user;\n  }\n\n  deleteUser(id) {\n    this.edit = false;\n    this.arr = this.arr.filter(el => el.id !== id);\n  }\n\n  editUser(user) {\n    this.arr = this.arr.map(el => el.id === user.id ? el = user : el);\n  }\n\n  addUser(user) {\n    if (!user.name || !user.surname) return;\n    this.arr.push(user);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"arr\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      id: 1,\n      name: 'Tanya',\n      surname: 'Baikova',\n      age: 18\n    }, {\n      id: 2,\n      name: 'Pasha',\n      surname: 'Sukhov',\n      age: 16\n    }];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"edit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"currentEditUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      name: '',\n      surname: '',\n      age: 0\n    };\n  }\n})), _class);\nconst users = new Users();\nexport default users;\nexport { Users };","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/stores/menu-store.tsx"],"names":["observable","Users","currentEditField","user","edit","currentEditUser","deleteUser","id","arr","filter","el","editUser","map","addUser","name","surname","push","age","users"],"mappings":";;;;;;AAAA;AAEA;AACA;AACA,SAAQA,UAAR,QAAyB,MAAzB;IAEMC,K,sBAAN,MAAMA,KAAN,CAAY;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAQRC,EAAAA,gBAAgB,CAACC,IAAD,EAAY;AACxB,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,eAAL,GAAuBF,IAAvB;AACH;;AACDG,EAAAA,UAAU,CAACC,EAAD,EAAa;AACnB,SAAKH,IAAL,GAAY,KAAZ;AACA,SAAKI,GAAL,GAAW,KAAKA,GAAL,CAASC,MAAT,CAAgBC,EAAE,IAAGA,EAAE,CAACH,EAAH,KAAUA,EAA/B,CAAX;AACH;;AACDI,EAAAA,QAAQ,CAACR,IAAD,EAAY;AAChB,SAAKK,GAAL,GAAW,KAAKA,GAAL,CAASI,GAAT,CAAcF,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAQJ,IAAI,CAACI,EAAb,GAAkBG,EAAE,GAACP,IAArB,GAA4BO,EAAhD,CAAX;AACH;;AACDG,EAAAA,OAAO,CAACV,IAAD,EAAY;AACf,QAAI,CAACA,IAAI,CAACW,IAAN,IAAc,CAACX,IAAI,CAACY,OAAxB,EACI;AACJ,SAAKP,GAAL,CAASQ,IAAT,CAAcb,IAAd;AACH;;AAvBO,C,6EACPH,U;;;;;WAAiB,CACV;AAACO,MAAAA,EAAE,EAAE,CAAL;AAAQO,MAAAA,IAAI,EAAE,OAAd;AAAuBC,MAAAA,OAAO,EAAE,SAAhC;AAA2CE,MAAAA,GAAG,EAAE;AAAhD,KADU,EAEV;AAACV,MAAAA,EAAE,EAAE,CAAL;AAAQO,MAAAA,IAAI,EAAE,OAAd;AAAuBC,MAAAA,OAAO,EAAE,QAAhC;AAA2CE,MAAAA,GAAG,EAAE;AAAhD,KAFU,C;;wEAIjBjB,U;;;;;WAAkB,K;;mFAClBA,U;;;;;WAA6B;AAACc,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,OAAO,EAAE,EAApB;AAAwBE,MAAAA,GAAG,EAAE;AAA7B,K;;;AAoBlC,MAAMC,KAAK,GAAG,IAAIjB,KAAJ,EAAd;AACA,eAAeiB,KAAf;AACA,SAAQjB,KAAR","sourcesContent":["// import logo from './logo.svg';\nimport { setServers } from \"dns\";\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\nimport {observable} from 'mobx';  \n\nclass Users {\n    @observable arr = [ \n            {id: 1, name: 'Tanya', surname: 'Baikova', age: 18}, \n            {id: 2, name: 'Pasha', surname: 'Sukhov',  age: 16}\n        ];\n    @observable edit = false;\n    @observable currentEditUser = {name: '', surname: '', age: 0}\n\n    currentEditField(user: any) {\n        this.edit = true;\n        this.currentEditUser = user;\n    }\n    deleteUser(id: number) {\n        this.edit = false;\n        this.arr = this.arr.filter(el=> el.id !== id);\n    }\n    editUser(user: any) {\n        this.arr = this.arr.map((el => el.id===user.id ? el=user : el));\n    }\n    addUser(user: any) {\n        if (!user.name || !user.surname) \n            return;\n        this.arr.push(user);\n    };\n}\n\nconst users = new Users();\nexport default users;\nexport {Users}"]},"metadata":{},"sourceType":"module"}