{"ast":null,"code":"var _jsxFileName = \"/Users/a18459465/study/practice/src/App.tsx\";\nimport React, { useContext } from \"react\"; // import logo from './logo.svg';\n\nimport \"./App.css\"; // import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n// function Handle() {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <button onClick={()=>setCount(count+1)}>+</button>\n//       {count}\n//       <button onClick={()=>setCount(count-1)}>-</button>\n//     </div>\n//   )\n// }\n// const Counter: FC<{ count: number; setCount(c: number): void }> = ({ count, setCount }) => {\n//   useEffect(()=>{\n//     console.log('hello')\n//   }, [setCount])\n//   const increment = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n//   const decrement = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n//   return (\n//     <>\n//       <button onClick={increment}>+</button>\n//       {count}\n//       <button onClick={decrement}>-</button>\n//     </>\n//   );\n// };\n// const App: React.FunctionComponent = () => {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//     </div>\n//   );\n// };\n\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#eeeeee\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#222222\"\n  }\n};\nconst ThemeContext = React.createContext(themes.light);\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: themes.light,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Toolbar(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemedButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ThemedButton() {\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, \"\\u042F \\u0441\\u0442\\u0438\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D \\u0442\\u0435\\u043C\\u043E\\u0439 \\u0438\\u0437 \\u043A\\u043E\\u043D\\u0442\\u0435\\u043A\\u0441\\u0442\\u0430!\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/App.tsx"],"names":["React","useContext","themes","light","foreground","background","dark","ThemeContext","createContext","App","Toolbar","props","ThemedButton","theme","color"],"mappings":";AAAA,OAAOA,KAAP,IAAsDC,UAAtD,QAAwE,OAAxE,C,CACA;;AACA,OAAO,WAAP,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,SADP;AAELC,IAAAA,UAAU,EAAE;AAFP,GADM;AAKbC,EAAAA,IAAI,EAAE;AACJF,IAAAA,UAAU,EAAE,SADR;AAEJC,IAAAA,UAAU,EAAE;AAFR;AALO,CAAf;AAWA,MAAME,YAAY,GAAGP,KAAK,CAACQ,aAAN,CAAoBN,MAAM,CAACC,KAA3B,CAArB;;AAEA,SAASM,GAAT,GAAe;AACb,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEP,MAAM,CAACC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASO,OAAT,CAAiBC,KAAjB,EAA6B;AAC3B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASC,YAAT,GAAwB;AACtB,QAAMC,KAAK,GAAGZ,UAAU,CAACM,YAAD,CAAxB;AAEA,sBACE;AAAQ,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAU,EAAEQ,KAAK,CAACR,UAApB;AAAgCS,MAAAA,KAAK,EAAED,KAAK,CAACT;AAA7C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+KADF;AAKD;;AACD,eAAeK,GAAf","sourcesContent":["import React, { useState, FC, useCallback, useEffect, useContext } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n\n// function Handle() {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <button onClick={()=>setCount(count+1)}>+</button>\n//       {count}\n//       <button onClick={()=>setCount(count-1)}>-</button>\n//     </div>\n//   )\n// }\n\n// const Counter: FC<{ count: number; setCount(c: number): void }> = ({ count, setCount }) => {\n//   useEffect(()=>{\n//     console.log('hello')\n//   }, [setCount])\n//   const increment = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n\n//   const decrement = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n\n//   return (\n//     <>\n//       <button onClick={increment}>+</button>\n//       {count}\n//       <button onClick={decrement}>-</button>\n//     </>\n//   );\n// };\n\n// const App: React.FunctionComponent = () => {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//     </div>\n//   );\n// };\n\n\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#eeeeee\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#222222\"\n  }\n};\n\nconst ThemeContext = React.createContext(themes.light);\n\nfunction App() {\n  return (\n    <ThemeContext.Provider value={themes.light}>\n      <Toolbar />\n    </ThemeContext.Provider>\n  );\n}\n\nfunction Toolbar(props: any) {\n  return (\n    <div>\n      <ThemedButton />\n    </div>\n  );\n}\n\nfunction ThemedButton() {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <button style={{ background: theme.background, color: theme.foreground }}>\n      Я стилизован темой из контекста!\n    </button>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}