{"ast":null,"code":"var _jsxFileName = \"/Users/a18459465/study/practice/src/App.tsx\";\nimport React, { useState } from \"react\"; // import logo from './logo.svg';\n\nimport \"./App.css\";\nimport users from './stores/menu-store';\n\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n// const AddUserForm: FC<{addUser(user: any): any}> = ({addUser}) => {\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [user, setUser] = useState(initialState);\n//   function handleChange(event: any) {\n//     const {name, value} = event.currentTarget;\n//     setUser({...user, [name]: value})\n//   }\n//   function handleSubmit(event: any) {\n//     event.preventDefault();\n//     if (!user.name || !user.surname) return;\n//     addUser(user);\n//     //console.log(user);\n//     setUser(initialState);\n//   }\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Name</h1>\n//       <input type=\"text\" name=\"name\" value={user.name}  onChange={handleChange}/>\n//       <h1>Surname</h1>\n//       <input type=\"text\" name=\"surname\" value={user.surname} onChange={handleChange}/>\n//       <h1>Age</h1>\n//       <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}/>\n//       <button>Add new User</button>\n//     </form>\n//   )\n// }\n// interface Props {\n//   users: {\n//     id: number;\n//     name: string;\n//     surname: string;\n//     age: number;\n//   }[],\n//   deleteUser(id: number) : any;\n//   editRow(el: any): any\n// }\n// const EditUserForm: FC<{editing: any, setEditing: any, currentUser: any, updateUser: any}> = ({editing, setEditing, currentUser, updateUser}) => {\n//   const [user, setUser] = useState(currentUser);\n//   useEffect(()=>{\n//     setUser(currentUser)\n//   }, [currentUser])\n//   function handleChange(event: any) {\n//     const {name, value} = event.target;\n//     setUser({...user, [name]:value})\n//   }\n//   function handleClick() {\n//     setEditing(false);\n//     updateUser(user)\n//   }\n//   return (\n//     <div>{currentUser.name}\n//       Name<input value={user.name} name=\"name\" onChange={handleChange} type=\"text\" />\n//       Surname<input value={user.surname} name=\"surname\" onChange={handleChange} type=\"text\" />\n//       Age<input value={user.age} name=\"age\" onChange={handleChange} type=\"text\" />\n//       <button onClick={handleClick}>Edit</button>\n//     </div>\n//   )\n// }\n// const AddTable: FC<Props> = ({users, deleteUser, editRow}) => {\n//   function handleDeleteUser(id: number) {\n//     let answer = window.confirm('Are you sure?')\n//     if (answer) {\n//       deleteUser(id)\n//     }\n//     console.log(users);\n//   }\n//   function handleEditUser(el: any) {\n//     editRow(el);\n//   }\n//   let user1: any[] = users.map((el: any) =>\n//     (<div className=\"row\">\n//       <div key=\"id\" className=\"col\">{el.id}</div>\n//       <div key=\"name\" className=\"col\">{el.name}</div>\n//       <div key=\"surname\" className=\"col\">{el.surname}</div>\n//       <div key=\"age\" className=\"col\">{el.age}</div>\n//       <button onClick={()=>handleDeleteUser(el.id)}>delete</button>\n//       <button onClick={()=>handleEditUser(el)}>edit</button>\n//     </div>))\n//   return (\n//       <div>{user1}</div>\n//   )\n// }\n// const usersData = [\n//   { id: 1, name: 'Tania', surname: 'floppydiskette', age: 21 },\n//   { id: 2, name: 'Max', surname: 'maxfarseer', age: 23 },\n// ]\n// const App: FC= () => {\n//   const [users, setUsers] = useState(usersData);\n//   const [editing, setEditing] = useState(false);\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [currentUser, setCurrentUser] = useState(initialState);\n//   function addUser(user: any){\n//     user.id = users.length+1;\n//     users.push(user);\n//     setUsers([...users]);\n//   }\n//   const deleteUser = (id: number)=> {\n//     setEditing(false);\n//     setUsers(users.filter(el=> el.id!==id));\n//   }\n//   const editRow = (user: any) => {\n//     setEditing(true);\n//     setCurrentUser({id: user.id, name: user.name, surname: user.surname, age: user.age})\n//   }\n//   const updateUser = (currentUser: any)=> {\n//     setUsers(users.map(el => el.id===currentUser.id ? currentUser: el));\n//   }\n//   return(\n//     <div className=\"container\">\n//       <h1>App with Hooks</h1>\n//       <div className=\"flex-row\">\n//         {editing ? (<div className=\"flex-large\">\n//           <h1>Edit User</h1>\n//           <EditUserForm   editing={editing}\n//                           setEditing={setEditing}\n//                           currentUser={currentUser} \n//                           updateUser={updateUser}/>\n//         </div>) :\n//         (<div className=\"flex-large\">\n//           <h2>Add user</h2>\n//           <AddUserForm  addUser={addUser}/>\n//         </div>)}\n//         <div className=\"flex-large\">\n//           <h2>View users</h2>\n//           <AddTable users={users} deleteUser={deleteUser} editRow={editRow}/>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\nconst AddUser = () => {\n  const [user, stateUser] = useState({\n    name: '',\n    surname: '',\n    age: 0\n  });\n\n  function inputChange(e) {\n    console.log('ddjjdk');\n    const {\n      name,\n      value\n    } = e.target;\n    stateUser({ ...user,\n      [name]: value\n    });\n    console.log(user);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    value: user.name,\n    name: \"name\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }\n  }), \"Surname:\", /*#__PURE__*/React.createElement(\"input\", {\n    value: user.surname,\n    name: \"surname\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), \"Age:\", /*#__PURE__*/React.createElement(\"input\", {\n    value: user.age,\n    name: \"age\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log('ass'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, \"Add User\"));\n};\n\nconst App = () => {\n  let users1 = users.arr.map(el => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, el.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, el.surname), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, el.age)));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, \"AddUser\"), /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, \"View Users\"), users1));\n}; // Name:<input value={user.name} name=\"name\" onChange={(e) => user.inputChange(e)}/>\n// Surname:<input value={user.surname} name=\"surname\" onChange={(e) => user.inputChange(e)}/>\n// Age<input value={user.age} name=\"age\" onChange={(e) => user.inputChange(e)}/>\n// <button onClick={()=>console.log('ass')}>Add User</button>\n// class User {\n//   @observable name: string = '';\n//   @observable surname: string = '';\n//   @observable age: string = '';\n//   inputChange(e: any): void {\n//         if (e.target.name === 'name') {\n//             this.name = e.target.value\n//         }\n//         if (e.target.name === 'surname') {\n//             this.surname = e.target.value\n//         }\n//         if (e.target.name === 'age') {\n//             this.age = e.target.value\n//         }\n//   }\n// }\n// let user = new User()\n\n\nexport default App;","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/App.tsx"],"names":["React","useState","users","AddUser","user","stateUser","name","surname","age","inputChange","e","console","log","value","target","App","users1","arr","map","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAwE,OAAxE,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlxB,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAoBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE,EAApB;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAAD,CAAlC;;AACA,WAASC,WAAT,CAAqBC,CAArB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAM;AAACN,MAAAA,IAAD;AAAOO,MAAAA;AAAP,QAAgBH,CAAC,CAACI,MAAxB;AACAT,IAAAA,SAAS,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACE,IAAD,GAAQO;AAAlB,KAAD,CAAT;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD;;AACD,sBAAQ,gEACD;AAAO,IAAA,KAAK,EAAEA,IAAI,CAACE,IAAnB;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,QAAQ,EAAEG,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,2BAEE;AAAO,IAAA,KAAK,EAAEL,IAAI,CAACG,OAAnB;AAA4B,IAAA,IAAI,EAAC,SAAjC;AAA2C,IAAA,QAAQ,EAAEE,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,uBAGF;AAAO,IAAA,KAAK,EAAEL,IAAI,CAACI,GAAnB;AAAwB,IAAA,IAAI,EAAC,KAA7B;AAAmC,IAAA,QAAQ,EAAEC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,eAIN;AAAQ,IAAA,OAAO,EAAE,MAAIE,OAAO,CAACC,GAAR,CAAY,KAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJM,CAAR;AAMD,CAdD;;AAeA,MAAMG,GAAG,GAAG,MAAM;AAChB,MAAIC,MAAM,GAAGd,KAAK,CAACe,GAAN,CAAUC,GAAV,CAAeC,EAAD,iBAAW;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,EAAE,CAACb,IAAzB,CADoC,eAEpC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBa,EAAE,CAACZ,OAAzB,CAFoC,eAGpC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBY,EAAE,CAACX,GAAzB,CAHoC,CAAzB,CAAb;AAKA,sBAAQ,uDACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADQ,eAKR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGQ,MAFH,CALQ,CAAR;AAUD,CAhBD,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeD,GAAf","sourcesContent":["import React, { useState, FC, useCallback, useEffect, useReducer } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport users from './stores/menu-store';\nimport { setServers } from \"dns\";\nimport {observer} from 'mobx-react-lite';\nimport {observable} from 'mobx';\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n\n\n// const AddUserForm: FC<{addUser(user: any): any}> = ({addUser}) => {\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [user, setUser] = useState(initialState);\n\n//   function handleChange(event: any) {\n\n//     const {name, value} = event.currentTarget;\n//     setUser({...user, [name]: value})\n//   }\n\n//   function handleSubmit(event: any) {\n//     event.preventDefault();\n//     if (!user.name || !user.surname) return;\n//     addUser(user);\n//     //console.log(user);\n//     setUser(initialState);\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Name</h1>\n//       <input type=\"text\" name=\"name\" value={user.name}  onChange={handleChange}/>\n//       <h1>Surname</h1>\n//       <input type=\"text\" name=\"surname\" value={user.surname} onChange={handleChange}/>\n//       <h1>Age</h1>\n//       <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}/>\n//       <button>Add new User</button>\n//     </form>\n//   )\n// }\n\n// interface Props {\n//   users: {\n//     id: number;\n//     name: string;\n//     surname: string;\n//     age: number;\n//   }[],\n//   deleteUser(id: number) : any;\n//   editRow(el: any): any\n// }\n\n// const EditUserForm: FC<{editing: any, setEditing: any, currentUser: any, updateUser: any}> = ({editing, setEditing, currentUser, updateUser}) => {\n//   const [user, setUser] = useState(currentUser);\n//   useEffect(()=>{\n//     setUser(currentUser)\n//   }, [currentUser])\n//   function handleChange(event: any) {\n//     const {name, value} = event.target;\n//     setUser({...user, [name]:value})\n//   }\n//   function handleClick() {\n//     setEditing(false);\n//     updateUser(user)\n//   }\n//   return (\n//     <div>{currentUser.name}\n//       Name<input value={user.name} name=\"name\" onChange={handleChange} type=\"text\" />\n//       Surname<input value={user.surname} name=\"surname\" onChange={handleChange} type=\"text\" />\n//       Age<input value={user.age} name=\"age\" onChange={handleChange} type=\"text\" />\n//       <button onClick={handleClick}>Edit</button>\n//     </div>\n//   )\n// }\n\n// const AddTable: FC<Props> = ({users, deleteUser, editRow}) => {\n//   function handleDeleteUser(id: number) {\n//     let answer = window.confirm('Are you sure?')\n//     if (answer) {\n//       deleteUser(id)\n//     }\n//     console.log(users);\n//   }\n//   function handleEditUser(el: any) {\n//     editRow(el);\n//   }\n//   let user1: any[] = users.map((el: any) =>\n//     (<div className=\"row\">\n//       <div key=\"id\" className=\"col\">{el.id}</div>\n//       <div key=\"name\" className=\"col\">{el.name}</div>\n//       <div key=\"surname\" className=\"col\">{el.surname}</div>\n//       <div key=\"age\" className=\"col\">{el.age}</div>\n//       <button onClick={()=>handleDeleteUser(el.id)}>delete</button>\n//       <button onClick={()=>handleEditUser(el)}>edit</button>\n//     </div>))\n//   return (\n//       <div>{user1}</div>\n//   )\n// }\n\n// const usersData = [\n//   { id: 1, name: 'Tania', surname: 'floppydiskette', age: 21 },\n//   { id: 2, name: 'Max', surname: 'maxfarseer', age: 23 },\n// ]\n\n// const App: FC= () => {\n//   const [users, setUsers] = useState(usersData);\n//   const [editing, setEditing] = useState(false);\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [currentUser, setCurrentUser] = useState(initialState);\n\n//   function addUser(user: any){\n//     user.id = users.length+1;\n//     users.push(user);\n//     setUsers([...users]);\n//   }\n//   const deleteUser = (id: number)=> {\n//     setEditing(false);\n//     setUsers(users.filter(el=> el.id!==id));\n//   }\n//   const editRow = (user: any) => {\n//     setEditing(true);\n//     setCurrentUser({id: user.id, name: user.name, surname: user.surname, age: user.age})\n//   }\n//   const updateUser = (currentUser: any)=> {\n//     setUsers(users.map(el => el.id===currentUser.id ? currentUser: el));\n//   }\n//   return(\n//     <div className=\"container\">\n//       <h1>App with Hooks</h1>\n//       <div className=\"flex-row\">\n//         {editing ? (<div className=\"flex-large\">\n//           <h1>Edit User</h1>\n//           <EditUserForm   editing={editing}\n//                           setEditing={setEditing}\n//                           currentUser={currentUser} \n//                           updateUser={updateUser}/>\n//         </div>) :\n//         (<div className=\"flex-large\">\n//           <h2>Add user</h2>\n//           <AddUserForm  addUser={addUser}/>\n//         </div>)}\n//         <div className=\"flex-large\">\n//           <h2>View users</h2>\n//           <AddTable users={users} deleteUser={deleteUser} editRow={editRow}/>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\nconst AddUser: FC = () => {\n  const [user, stateUser] = useState({name: '', surname: '', age: 0});\n  function inputChange(e: any) {\n    console.log('ddjjdk')\n    const {name, value} = e.target;\n    stateUser({...user, [name]: value});\n    console.log(user);\n  }\n  return (<>\n    Name:<input value={user.name} name=\"name\" onChange={inputChange}/>\n    Surname:<input value={user.surname} name=\"surname\" onChange={inputChange}/>\n    Age:<input value={user.age} name=\"age\" onChange={inputChange}/>\n    <button onClick={()=>console.log('ass')}>Add User</button></>\n  )\n}\nconst App = () => {\n  let users1 = users.arr.map((el: any)=><div className=\"row\">\n    <div className=\"col\">{el.name}</div>\n    <div className=\"col\">{el.surname}</div>\n    <div className=\"col\">{el.age}</div>\n  </div>)\n  return (<>\n  <div>\n    <h2>AddUser</h2>\n    <AddUser />\n  </div>\n  <div>\n    <h2>View Users</h2>\n    {users1}\n  </div>\n  </>)\n}\n\n// Name:<input value={user.name} name=\"name\" onChange={(e) => user.inputChange(e)}/>\n// Surname:<input value={user.surname} name=\"surname\" onChange={(e) => user.inputChange(e)}/>\n// Age<input value={user.age} name=\"age\" onChange={(e) => user.inputChange(e)}/>\n// <button onClick={()=>console.log('ass')}>Add User</button>\n// class User {\n//   @observable name: string = '';\n//   @observable surname: string = '';\n//   @observable age: string = '';\n//   inputChange(e: any): void {\n//         if (e.target.name === 'name') {\n//             this.name = e.target.value\n//         }\n//         if (e.target.name === 'surname') {\n//             this.surname = e.target.value\n//         }\n//         if (e.target.name === 'age') {\n//             this.age = e.target.value\n//         }\n//   }\n// }\n// let user = new User()\nexport default App;\n"]},"metadata":{},"sourceType":"module"}