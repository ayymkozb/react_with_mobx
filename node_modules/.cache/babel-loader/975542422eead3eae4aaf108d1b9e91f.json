{"ast":null,"code":"var _jsxFileName = \"/Users/a18459465/study/practice/src/App.tsx\";\nimport React from \"react\"; // import logo from './logo.svg';\n\nimport \"./App.css\";\nimport menuStore from './stores/menu-store';\nimport { observer } from 'mobx-react-lite'; // import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n// const AddUserForm: FC<{addUser(user: any): any}> = ({addUser}) => {\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [user, setUser] = useState(initialState);\n//   function handleChange(event: any) {\n//     const {name, value} = event.currentTarget;\n//     setUser({...user, [name]: value})\n//   }\n//   function handleSubmit(event: any) {\n//     event.preventDefault();\n//     if (!user.name || !user.surname) return;\n//     addUser(user);\n//     //console.log(user);\n//     setUser(initialState);\n//   }\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Name</h1>\n//       <input type=\"text\" name=\"name\" value={user.name}  onChange={handleChange}/>\n//       <h1>Surname</h1>\n//       <input type=\"text\" name=\"surname\" value={user.surname} onChange={handleChange}/>\n//       <h1>Age</h1>\n//       <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}/>\n//       <button>Add new User</button>\n//     </form>\n//   )\n// }\n// interface Props {\n//   users: {\n//     id: number;\n//     name: string;\n//     surname: string;\n//     age: number;\n//   }[],\n//   deleteUser(id: number) : any;\n//   editRow(el: any): any\n// }\n// const EditUserForm: FC<{editing: any, setEditing: any, currentUser: any, updateUser: any}> = ({editing, setEditing, currentUser, updateUser}) => {\n//   const [user, setUser] = useState(currentUser);\n//   useEffect(()=>{\n//     setUser(currentUser)\n//   }, [currentUser])\n//   function handleChange(event: any) {\n//     const {name, value} = event.target;\n//     setUser({...user, [name]:value})\n//   }\n//   function handleClick() {\n//     setEditing(false);\n//     updateUser(user)\n//   }\n//   return (\n//     <div>{currentUser.name}\n//       Name<input value={user.name} name=\"name\" onChange={handleChange} type=\"text\" />\n//       Surname<input value={user.surname} name=\"surname\" onChange={handleChange} type=\"text\" />\n//       Age<input value={user.age} name=\"age\" onChange={handleChange} type=\"text\" />\n//       <button onClick={handleClick}>Edit</button>\n//     </div>\n//   )\n// }\n// const AddTable: FC<Props> = ({users, deleteUser, editRow}) => {\n//   function handleDeleteUser(id: number) {\n//     let answer = window.confirm('Are you sure?')\n//     if (answer) {\n//       deleteUser(id)\n//     }\n//     console.log(users);\n//   }\n//   function handleEditUser(el: any) {\n//     editRow(el);\n//   }\n//   let user1: any[] = users.map((el: any) =>\n//     (<div className=\"row\">\n//       <div key=\"id\" className=\"col\">{el.id}</div>\n//       <div key=\"name\" className=\"col\">{el.name}</div>\n//       <div key=\"surname\" className=\"col\">{el.surname}</div>\n//       <div key=\"age\" className=\"col\">{el.age}</div>\n//       <button onClick={()=>handleDeleteUser(el.id)}>delete</button>\n//       <button onClick={()=>handleEditUser(el)}>edit</button>\n//     </div>))\n//   return (\n//       <div>{user1}</div>\n//   )\n// }\n// const usersData = [\n//   { id: 1, name: 'Tania', surname: 'floppydiskette', age: 21 },\n//   { id: 2, name: 'Max', surname: 'maxfarseer', age: 23 },\n// ]\n// const App: FC= () => {\n//   const [users, setUsers] = useState(usersData);\n//   const [editing, setEditing] = useState(false);\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [currentUser, setCurrentUser] = useState(initialState);\n//   function addUser(user: any){\n//     user.id = users.length+1;\n//     users.push(user);\n//     setUsers([...users]);\n//   }\n//   const deleteUser = (id: number)=> {\n//     setEditing(false);\n//     setUsers(users.filter(el=> el.id!==id));\n//   }\n//   const editRow = (user: any) => {\n//     setEditing(true);\n//     setCurrentUser({id: user.id, name: user.name, surname: user.surname, age: user.age})\n//   }\n//   const updateUser = (currentUser: any)=> {\n//     setUsers(users.map(el => el.id===currentUser.id ? currentUser: el));\n//   }\n//   return(\n//     <div className=\"container\">\n//       <h1>App with Hooks</h1>\n//       <div className=\"flex-row\">\n//         {editing ? (<div className=\"flex-large\">\n//           <h1>Edit User</h1>\n//           <EditUserForm   editing={editing}\n//                           setEditing={setEditing}\n//                           currentUser={currentUser} \n//                           updateUser={updateUser}/>\n//         </div>) :\n//         (<div className=\"flex-large\">\n//           <h2>Add user</h2>\n//           <AddUserForm  addUser={addUser}/>\n//         </div>)}\n//         <div className=\"flex-large\">\n//           <h2>View users</h2>\n//           <AddTable users={users} deleteUser={deleteUser} editRow={editRow}/>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nconst App = observer(() => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }\n}, menuStore.show ? 'light' : 'dark')));\nexport default App;","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/App.tsx"],"names":["React","menuStore","observer","App","show"],"mappings":";AAAA,OAAOA,KAAP,MAAwE,OAAxE,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAAQC,QAAR,QAAuB,iBAAvmBACnB,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,SAAS,CAACG,IAAV,GAAiB,OAAjB,GAA2B,MAD9B,CADF,CADkB,CAApB;AAOA,eAAeD,GAAf","sourcesContent":["import React, { useState, FC, useCallback, useEffect, useReducer } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport menuStore from './stores/menu-store'\nimport { setServers } from \"dns\";\nimport {observer} from 'mobx-react-lite';\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n\n\n// const AddUserForm: FC<{addUser(user: any): any}> = ({addUser}) => {\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [user, setUser] = useState(initialState);\n\n//   function handleChange(event: any) {\n\n//     const {name, value} = event.currentTarget;\n//     setUser({...user, [name]: value})\n//   }\n\n//   function handleSubmit(event: any) {\n//     event.preventDefault();\n//     if (!user.name || !user.surname) return;\n//     addUser(user);\n//     //console.log(user);\n//     setUser(initialState);\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Name</h1>\n//       <input type=\"text\" name=\"name\" value={user.name}  onChange={handleChange}/>\n//       <h1>Surname</h1>\n//       <input type=\"text\" name=\"surname\" value={user.surname} onChange={handleChange}/>\n//       <h1>Age</h1>\n//       <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}/>\n//       <button>Add new User</button>\n//     </form>\n//   )\n// }\n\n// interface Props {\n//   users: {\n//     id: number;\n//     name: string;\n//     surname: string;\n//     age: number;\n//   }[],\n//   deleteUser(id: number) : any;\n//   editRow(el: any): any\n// }\n\n// const EditUserForm: FC<{editing: any, setEditing: any, currentUser: any, updateUser: any}> = ({editing, setEditing, currentUser, updateUser}) => {\n//   const [user, setUser] = useState(currentUser);\n//   useEffect(()=>{\n//     setUser(currentUser)\n//   }, [currentUser])\n//   function handleChange(event: any) {\n//     const {name, value} = event.target;\n//     setUser({...user, [name]:value})\n//   }\n//   function handleClick() {\n//     setEditing(false);\n//     updateUser(user)\n//   }\n//   return (\n//     <div>{currentUser.name}\n//       Name<input value={user.name} name=\"name\" onChange={handleChange} type=\"text\" />\n//       Surname<input value={user.surname} name=\"surname\" onChange={handleChange} type=\"text\" />\n//       Age<input value={user.age} name=\"age\" onChange={handleChange} type=\"text\" />\n//       <button onClick={handleClick}>Edit</button>\n//     </div>\n//   )\n// }\n\n// const AddTable: FC<Props> = ({users, deleteUser, editRow}) => {\n//   function handleDeleteUser(id: number) {\n//     let answer = window.confirm('Are you sure?')\n//     if (answer) {\n//       deleteUser(id)\n//     }\n//     console.log(users);\n//   }\n//   function handleEditUser(el: any) {\n//     editRow(el);\n//   }\n//   let user1: any[] = users.map((el: any) =>\n//     (<div className=\"row\">\n//       <div key=\"id\" className=\"col\">{el.id}</div>\n//       <div key=\"name\" className=\"col\">{el.name}</div>\n//       <div key=\"surname\" className=\"col\">{el.surname}</div>\n//       <div key=\"age\" className=\"col\">{el.age}</div>\n//       <button onClick={()=>handleDeleteUser(el.id)}>delete</button>\n//       <button onClick={()=>handleEditUser(el)}>edit</button>\n//     </div>))\n//   return (\n//       <div>{user1}</div>\n//   )\n// }\n\n// const usersData = [\n//   { id: 1, name: 'Tania', surname: 'floppydiskette', age: 21 },\n//   { id: 2, name: 'Max', surname: 'maxfarseer', age: 23 },\n// ]\n\n// const App: FC= () => {\n//   const [users, setUsers] = useState(usersData);\n//   const [editing, setEditing] = useState(false);\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [currentUser, setCurrentUser] = useState(initialState);\n\n//   function addUser(user: any){\n//     user.id = users.length+1;\n//     users.push(user);\n//     setUsers([...users]);\n//   }\n//   const deleteUser = (id: number)=> {\n//     setEditing(false);\n//     setUsers(users.filter(el=> el.id!==id));\n//   }\n//   const editRow = (user: any) => {\n//     setEditing(true);\n//     setCurrentUser({id: user.id, name: user.name, surname: user.surname, age: user.age})\n//   }\n//   const updateUser = (currentUser: any)=> {\n//     setUsers(users.map(el => el.id===currentUser.id ? currentUser: el));\n//   }\n//   return(\n//     <div className=\"container\">\n//       <h1>App with Hooks</h1>\n//       <div className=\"flex-row\">\n//         {editing ? (<div className=\"flex-large\">\n//           <h1>Edit User</h1>\n//           <EditUserForm   editing={editing}\n//                           setEditing={setEditing}\n//                           currentUser={currentUser} \n//                           updateUser={updateUser}/>\n//         </div>) :\n//         (<div className=\"flex-large\">\n//           <h2>Add user</h2>\n//           <AddUserForm  addUser={addUser}/>\n//         </div>)}\n//         <div className=\"flex-large\">\n//           <h2>View users</h2>\n//           <AddTable users={users} deleteUser={deleteUser} editRow={editRow}/>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\nconst App = observer(() => (\n  <>\n    <button>\n      {menuStore.show ? 'light' : 'dark'}\n    </button>\n  </>\n))\nexport default App;\n"]},"metadata":{},"sourceType":"module"}