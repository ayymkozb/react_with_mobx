{"ast":null,"code":"var _jsxFileName = \"/Users/a18459465/study/practice/src/App.tsx\";\nimport React, { useReducer } from \"react\"; // import logo from './logo.svg';\n\nimport \"./App.css\"; // import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n// function Handle() {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <button onClick={()=>setCount(count+1)}>+</button>\n//       {count}\n//       <button onClick={()=>setCount(count-1)}>-</button>\n//     </div>\n//   )\n// }\n// const Counter: FC<{ count: number; setCount(c: number): void }> = ({ count, setCount }) => {\n//   useEffect(()=>{\n//     console.log('hello')\n//   }, [setCount])\n//   const increment = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n//   const decrement = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n//   return (\n//     <>\n//       <button onClick={increment}>+</button>\n//       {count}\n//       <button onClick={decrement}>-</button>\n//     </>\n//   );\n// };\n// const App: React.FunctionComponent = () => {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//     </div>\n//   );\n// };\n\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state, action) {}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"+\"), state.count, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"-\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/App.tsx"],"names":["React","useReducer","initialState","count","reducer","state","action","App","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAsDC,UAAtD,QAAwE,OAAxE,C,CACA;;AACA,OAAO,WAAP,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAE;AAACC,EAAAA,KAAK,EAAE;AAAR,CAApB;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAA6BC,MAA7B,EAA0C,CAEzC;;AACD,SAASC,GAAT,GAAe;AACb,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBP,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAIM,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEGJ,KAAK,CAACF,KAFT,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAIK,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF;AAOD;;AACD,eAAeF,GAAf","sourcesContent":["import React, { useState, FC, useCallback, useEffect, useReducer } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n\n// function Handle() {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <button onClick={()=>setCount(count+1)}>+</button>\n//       {count}\n//       <button onClick={()=>setCount(count-1)}>-</button>\n//     </div>\n//   )\n// }\n\n// const Counter: FC<{ count: number; setCount(c: number): void }> = ({ count, setCount }) => {\n//   useEffect(()=>{\n//     console.log('hello')\n//   }, [setCount])\n//   const increment = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n\n//   const decrement = useCallback(() => {\n//     setCount(count + 1);\n//   }, [count, setCount]);\n\n//   return (\n//     <>\n//       <button onClick={increment}>+</button>\n//       {count}\n//       <button onClick={decrement}>-</button>\n//     </>\n//   );\n// };\n\n// const App: React.FunctionComponent = () => {\n//   const [count, setCount] = useState(0);\n//   return (\n//     <div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//       <div>\n//         <Counter count={count} setCount={setCount} />\n//       </div>\n//     </div>\n//   );\n// };\nconst initialState= {count: 0}\nfunction reducer(state: any, action: any) {\n\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div>\n      <button onClick={()=>dispatch({type: 'increment'})}>+</button>\n      {state.count}\n      <button onClick={()=>dispatch({type: 'decrement'})}>-</button>\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}