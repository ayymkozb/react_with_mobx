{"ast":null,"code":"import _initializerDefineProperty from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\n// import logo from './logo.svg';\n// import \"../App.css\";\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\nimport { observable } from 'mobx';\nlet Users = (_class = (_temp = class Users {\n  constructor() {\n    _initializerDefineProperty(this, \"arr\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"edit\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"currentEditUser\", _descriptor3, this);\n  }\n\n  currentEditField(user) {\n    this.edit = true;\n    this.currentEditUser = user;\n  }\n\n  deleteUser(name) {\n    this.arr = this.arr.filter(el => el.name !== name);\n  }\n\n  editUser(user) {\n    this.arr = this.arr.map(el => el.name === user.name ? el = user : el);\n    console.log(user);\n  }\n\n  addUser(user) {\n    this.arr.push(user);\n    console.log(this.arr, user);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"arr\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      name: 'Tanya',\n      surname: 'Baikova',\n      age: 18\n    }, {\n      name: 'Pasha',\n      surname: 'Sukhov',\n      age: 16\n    }];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"edit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"currentEditUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      name: '',\n      surname: '',\n      age: 0\n    };\n  }\n})), _class);\nconst users = new Users();\nexport default users;\nexport { Users };","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/stores/menu-store.tsx"],"names":["observable","Users","currentEditField","user","edit","currentEditUser","deleteUser","name","arr","filter","el","editUser","map","console","log","addUser","push","surname","age","users"],"mappings":";;;;;;AACA;AACA;AAEA;AACA;AACA,SAAQA,UAAR,QAAqD,MAArD;IAEMC,K,sBAAN,MAAMA,KAAN,CAAY;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAORC,EAAAA,gBAAgB,CAACC,IAAD,EAAY;AACxB,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,eAAL,GAAuBF,IAAvB;AACH;;AACDG,EAAAA,UAAU,CAACC,IAAD,EAAqB;AAC3B,SAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,MAAT,CAAgBC,EAAE,IAAGA,EAAE,CAACH,IAAH,KAAUA,IAA/B,CAAX;AACH;;AACDI,EAAAA,QAAQ,CAACR,IAAD,EAAiB;AACrB,SAAKK,GAAL,GAAW,KAAKA,GAAL,CAASI,GAAT,CAAcF,EAAE,IAAIA,EAAE,CAACH,IAAH,KAAUJ,IAAI,CAACI,IAAf,GAAsBG,EAAE,GAACP,IAAzB,GAAgCO,EAApD,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACH;;AACDY,EAAAA,OAAO,CAACZ,IAAD,EAAkB;AACrB,SAAKK,GAAL,CAASQ,IAAT,CAAcb,IAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,GAAjB,EAAsBL,IAAtB;AACH;;AArBO,C,6EACPH,U;;;;;WAAwB,CACjB;AAACO,MAAAA,IAAI,EAAE,OAAP;AAAgBU,MAAAA,OAAO,EAAE,SAAzB;AAAoCC,MAAAA,GAAG,EAAE;AAAzC,KADiB,EAEjB;AAACX,MAAAA,IAAI,EAAE,OAAP;AAAgBU,MAAAA,OAAO,EAAE,QAAzB;AAAoCC,MAAAA,GAAG,EAAE;AAAzC,KAFiB,C;;wEAIxBlB,U;;;;;WAA2B,K;;mFAC3BA,U;;;;;WAA6B;AAACO,MAAAA,IAAI,EAAE,EAAP;AAAWU,MAAAA,OAAO,EAAE,EAApB;AAAwBC,MAAAA,GAAG,EAAE;AAA7B,K;;;AAiBlC,MAAMC,KAAK,GAAG,IAAIlB,KAAJ,EAAd;AACA,eAAekB,KAAf;AACA,SAAQlB,KAAR","sourcesContent":["import React, { useState, FC, useCallback, useEffect, useReducer } from \"react\";\n// import logo from './logo.svg';\n// import \"../App.css\";\nimport { setServers } from \"dns\";\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\nimport {observable, computed, reaction, action} from 'mobx';  \n\nclass Users {\n    @observable arr: any[] = [ \n            {name: 'Tanya', surname: 'Baikova', age: 18}, \n            {name: 'Pasha', surname: 'Sukhov',  age: 16}\n        ];\n    @observable edit: boolean = false;\n    @observable currentEditUser = {name: '', surname: '', age: 0}\n    currentEditField(user: any) {\n        this.edit = true;\n        this.currentEditUser = user;\n    }\n    deleteUser(name: string): void {\n        this.arr = this.arr.filter(el=> el.name!==name)\n    }\n    editUser(user: any): void{\n        this.arr = this.arr.map((el => el.name===user.name ? el=user : el))\n        console.log(user);\n    }\n    addUser(user: any): void {\n        this.arr.push(user);\n        console.log(this.arr, user)\n    };\n}\nconst users = new Users();\nexport default users;\nexport {Users}"]},"metadata":{},"sourceType":"module"}