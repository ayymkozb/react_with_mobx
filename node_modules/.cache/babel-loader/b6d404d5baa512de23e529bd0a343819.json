{"ast":null,"code":"import _initializerDefineProperty from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/a18459465/study/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _jsxFileName = \"/Users/a18459465/study/practice/src/App.tsx\",\n    _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp;\n\nimport React from \"react\"; // import logo from './logo.svg';\n\nimport \"./App.css\";\nimport users from './stores/menu-store';\nimport { observable } from 'mobx'; // import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n// const AddUserForm: FC<{addUser(user: any): any}> = ({addUser}) => {\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [user, setUser] = useState(initialState);\n//   function handleChange(event: any) {\n//     const {name, value} = event.currentTarget;\n//     setUser({...user, [name]: value})\n//   }\n//   function handleSubmit(event: any) {\n//     event.preventDefault();\n//     if (!user.name || !user.surname) return;\n//     addUser(user);\n//     //console.log(user);\n//     setUser(initialState);\n//   }\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Name</h1>\n//       <input type=\"text\" name=\"name\" value={user.name}  onChange={handleChange}/>\n//       <h1>Surname</h1>\n//       <input type=\"text\" name=\"surname\" value={user.surname} onChange={handleChange}/>\n//       <h1>Age</h1>\n//       <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}/>\n//       <button>Add new User</button>\n//     </form>\n//   )\n// }\n// interface Props {\n//   users: {\n//     id: number;\n//     name: string;\n//     surname: string;\n//     age: number;\n//   }[],\n//   deleteUser(id: number) : any;\n//   editRow(el: any): any\n// }\n// const EditUserForm: FC<{editing: any, setEditing: any, currentUser: any, updateUser: any}> = ({editing, setEditing, currentUser, updateUser}) => {\n//   const [user, setUser] = useState(currentUser);\n//   useEffect(()=>{\n//     setUser(currentUser)\n//   }, [currentUser])\n//   function handleChange(event: any) {\n//     const {name, value} = event.target;\n//     setUser({...user, [name]:value})\n//   }\n//   function handleClick() {\n//     setEditing(false);\n//     updateUser(user)\n//   }\n//   return (\n//     <div>{currentUser.name}\n//       Name<input value={user.name} name=\"name\" onChange={handleChange} type=\"text\" />\n//       Surname<input value={user.surname} name=\"surname\" onChange={handleChange} type=\"text\" />\n//       Age<input value={user.age} name=\"age\" onChange={handleChange} type=\"text\" />\n//       <button onClick={handleClick}>Edit</button>\n//     </div>\n//   )\n// }\n// const AddTable: FC<Props> = ({users, deleteUser, editRow}) => {\n//   function handleDeleteUser(id: number) {\n//     let answer = window.confirm('Are you sure?')\n//     if (answer) {\n//       deleteUser(id)\n//     }\n//     console.log(users);\n//   }\n//   function handleEditUser(el: any) {\n//     editRow(el);\n//   }\n//   let user1: any[] = users.map((el: any) =>\n//     (<div className=\"row\">\n//       <div key=\"id\" className=\"col\">{el.id}</div>\n//       <div key=\"name\" className=\"col\">{el.name}</div>\n//       <div key=\"surname\" className=\"col\">{el.surname}</div>\n//       <div key=\"age\" className=\"col\">{el.age}</div>\n//       <button onClick={()=>handleDeleteUser(el.id)}>delete</button>\n//       <button onClick={()=>handleEditUser(el)}>edit</button>\n//     </div>))\n//   return (\n//       <div>{user1}</div>\n//   )\n// }\n// const usersData = [\n//   { id: 1, name: 'Tania', surname: 'floppydiskette', age: 21 },\n//   { id: 2, name: 'Max', surname: 'maxfarseer', age: 23 },\n// ]\n// const App: FC= () => {\n//   const [users, setUsers] = useState(usersData);\n//   const [editing, setEditing] = useState(false);\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [currentUser, setCurrentUser] = useState(initialState);\n//   function addUser(user: any){\n//     user.id = users.length+1;\n//     users.push(user);\n//     setUsers([...users]);\n//   }\n//   const deleteUser = (id: number)=> {\n//     setEditing(false);\n//     setUsers(users.filter(el=> el.id!==id));\n//   }\n//   const editRow = (user: any) => {\n//     setEditing(true);\n//     setCurrentUser({id: user.id, name: user.name, surname: user.surname, age: user.age})\n//   }\n//   const updateUser = (currentUser: any)=> {\n//     setUsers(users.map(el => el.id===currentUser.id ? currentUser: el));\n//   }\n//   return(\n//     <div className=\"container\">\n//       <h1>App with Hooks</h1>\n//       <div className=\"flex-row\">\n//         {editing ? (<div className=\"flex-large\">\n//           <h1>Edit User</h1>\n//           <EditUserForm   editing={editing}\n//                           setEditing={setEditing}\n//                           currentUser={currentUser} \n//                           updateUser={updateUser}/>\n//         </div>) :\n//         (<div className=\"flex-large\">\n//           <h2>Add user</h2>\n//           <AddUserForm  addUser={addUser}/>\n//         </div>)}\n//         <div className=\"flex-large\">\n//           <h2>View users</h2>\n//           <AddTable users={users} deleteUser={deleteUser} editRow={editRow}/>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nconst App = () => {\n  let users1 = users.arr.map(el => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, el.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, el.surname), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, el.age)));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, \"AddUser\"), \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    value: user.name,\n    name: \"name\",\n    onChange: e => user.inputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }\n  }), \"Surname:\", /*#__PURE__*/React.createElement(\"input\", {\n    value: user.surname,\n    name: \"surname\",\n    onChange: e => user.inputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }), \"Age\", /*#__PURE__*/React.createElement(\"input\", {\n    value: user.age,\n    name: \"age\",\n    onChange: e => user.inputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"Add User\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, \"View Users\"), users1));\n};\n\nlet User = (_class = (_temp = class User {\n  constructor() {\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"surname\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"age\", _descriptor3, this);\n  }\n\n  inputChange(e) {}\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"name\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"surname\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"age\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n})), _class);\nlet user = new User();\nexport default App;","map":{"version":3,"sources":["/Users/a18459465/study/practice/src/App.tsx"],"names":["React","users","observable","App","users1","arr","map","el","name","surname","age","user","e","inputChange","User"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAwE,OAAxE,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,SAAQC,UAAR,QAAyB,MAAzhB,MAAIC,MAAM,GAAGH,KAAK,CAACI,GAAN,CAAUC,GAAV,CAAeC,EAAD,iBAAW;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,EAAE,CAACC,IAAzB,CADoC,eAEpC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,EAAE,CAACE,OAAzB,CAFoC,eAGpC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBF,EAAE,CAACG,GAAzB,CAHoC,CAAzB,CAAb;AAKA,sBAAQ,uDACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,wBAES;AAAO,IAAA,KAAK,EAAEC,IAAI,CAACH,IAAnB;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,QAAQ,EAAGI,CAAD,IAAOD,IAAI,CAACE,WAAL,CAAiBD,CAAjB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT,2BAGY;AAAO,IAAA,KAAK,EAAED,IAAI,CAACF,OAAnB;AAA4B,IAAA,IAAI,EAAC,SAAjC;AAA2C,IAAA,QAAQ,EAAGG,CAAD,IAAOD,IAAI,CAACE,WAAL,CAAiBD,CAAjB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,sBAIO;AAAO,IAAA,KAAK,EAAED,IAAI,CAACD,GAAnB;AAAwB,IAAA,IAAI,EAAC,KAA7B;AAAmC,IAAA,QAAQ,EAAGE,CAAD,IAAOD,IAAI,CAACE,WAAL,CAAiBD,CAAjB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJP,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADQ,eAQR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGR,MAFH,CARQ,CAAR;AAaD,CAnBD;;IAqBMU,I,sBAAN,MAAMA,IAAN,CAAW;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAITD,EAAAA,WAAW,CAACD,CAAD,EAAU,CAEpB;;AANQ,C,8EACRV,U;;;;;WAA0B,E;;2EAC1BA,U;;;;;WAA6B,E;;uEAC7BA,U;;;;;WAAyB,E;;;AAK5B,IAAIS,IAAI,GAAG,IAAIG,IAAJ,EAAX;AACA,eAAeX,GAAf","sourcesContent":["import React, { useState, FC, useCallback, useEffect, useReducer } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport users from './stores/menu-store';\nimport { setServers } from \"dns\";\nimport {observer} from 'mobx-react-lite';\nimport {observable} from 'mobx';\n// import { userInfo } from 'os';\n// import { stringify } from 'querystring';\n\n\n// const AddUserForm: FC<{addUser(user: any): any}> = ({addUser}) => {\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [user, setUser] = useState(initialState);\n\n//   function handleChange(event: any) {\n\n//     const {name, value} = event.currentTarget;\n//     setUser({...user, [name]: value})\n//   }\n\n//   function handleSubmit(event: any) {\n//     event.preventDefault();\n//     if (!user.name || !user.surname) return;\n//     addUser(user);\n//     //console.log(user);\n//     setUser(initialState);\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Name</h1>\n//       <input type=\"text\" name=\"name\" value={user.name}  onChange={handleChange}/>\n//       <h1>Surname</h1>\n//       <input type=\"text\" name=\"surname\" value={user.surname} onChange={handleChange}/>\n//       <h1>Age</h1>\n//       <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}/>\n//       <button>Add new User</button>\n//     </form>\n//   )\n// }\n\n// interface Props {\n//   users: {\n//     id: number;\n//     name: string;\n//     surname: string;\n//     age: number;\n//   }[],\n//   deleteUser(id: number) : any;\n//   editRow(el: any): any\n// }\n\n// const EditUserForm: FC<{editing: any, setEditing: any, currentUser: any, updateUser: any}> = ({editing, setEditing, currentUser, updateUser}) => {\n//   const [user, setUser] = useState(currentUser);\n//   useEffect(()=>{\n//     setUser(currentUser)\n//   }, [currentUser])\n//   function handleChange(event: any) {\n//     const {name, value} = event.target;\n//     setUser({...user, [name]:value})\n//   }\n//   function handleClick() {\n//     setEditing(false);\n//     updateUser(user)\n//   }\n//   return (\n//     <div>{currentUser.name}\n//       Name<input value={user.name} name=\"name\" onChange={handleChange} type=\"text\" />\n//       Surname<input value={user.surname} name=\"surname\" onChange={handleChange} type=\"text\" />\n//       Age<input value={user.age} name=\"age\" onChange={handleChange} type=\"text\" />\n//       <button onClick={handleClick}>Edit</button>\n//     </div>\n//   )\n// }\n\n// const AddTable: FC<Props> = ({users, deleteUser, editRow}) => {\n//   function handleDeleteUser(id: number) {\n//     let answer = window.confirm('Are you sure?')\n//     if (answer) {\n//       deleteUser(id)\n//     }\n//     console.log(users);\n//   }\n//   function handleEditUser(el: any) {\n//     editRow(el);\n//   }\n//   let user1: any[] = users.map((el: any) =>\n//     (<div className=\"row\">\n//       <div key=\"id\" className=\"col\">{el.id}</div>\n//       <div key=\"name\" className=\"col\">{el.name}</div>\n//       <div key=\"surname\" className=\"col\">{el.surname}</div>\n//       <div key=\"age\" className=\"col\">{el.age}</div>\n//       <button onClick={()=>handleDeleteUser(el.id)}>delete</button>\n//       <button onClick={()=>handleEditUser(el)}>edit</button>\n//     </div>))\n//   return (\n//       <div>{user1}</div>\n//   )\n// }\n\n// const usersData = [\n//   { id: 1, name: 'Tania', surname: 'floppydiskette', age: 21 },\n//   { id: 2, name: 'Max', surname: 'maxfarseer', age: 23 },\n// ]\n\n// const App: FC= () => {\n//   const [users, setUsers] = useState(usersData);\n//   const [editing, setEditing] = useState(false);\n//   const initialState = {\n//     id: 0,\n//     name: '',\n//     surname: '',\n//     age: 0\n//   }\n//   const [currentUser, setCurrentUser] = useState(initialState);\n\n//   function addUser(user: any){\n//     user.id = users.length+1;\n//     users.push(user);\n//     setUsers([...users]);\n//   }\n//   const deleteUser = (id: number)=> {\n//     setEditing(false);\n//     setUsers(users.filter(el=> el.id!==id));\n//   }\n//   const editRow = (user: any) => {\n//     setEditing(true);\n//     setCurrentUser({id: user.id, name: user.name, surname: user.surname, age: user.age})\n//   }\n//   const updateUser = (currentUser: any)=> {\n//     setUsers(users.map(el => el.id===currentUser.id ? currentUser: el));\n//   }\n//   return(\n//     <div className=\"container\">\n//       <h1>App with Hooks</h1>\n//       <div className=\"flex-row\">\n//         {editing ? (<div className=\"flex-large\">\n//           <h1>Edit User</h1>\n//           <EditUserForm   editing={editing}\n//                           setEditing={setEditing}\n//                           currentUser={currentUser} \n//                           updateUser={updateUser}/>\n//         </div>) :\n//         (<div className=\"flex-large\">\n//           <h2>Add user</h2>\n//           <AddUserForm  addUser={addUser}/>\n//         </div>)}\n//         <div className=\"flex-large\">\n//           <h2>View users</h2>\n//           <AddTable users={users} deleteUser={deleteUser} editRow={editRow}/>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\nconst App = () => {\n  let users1 = users.arr.map((el: any)=><div className=\"row\">\n    <div className=\"col\">{el.name}</div>\n    <div className=\"col\">{el.surname}</div>\n    <div className=\"col\">{el.age}</div>\n  </div>)\n  return (<>\n  <div>\n    <h2>AddUser</h2>\n      Name:<input value={user.name} name=\"name\" onChange={(e) => user.inputChange(e)}/>\n      Surname:<input value={user.surname} name=\"surname\" onChange={(e) => user.inputChange(e)}/>\n      Age<input value={user.age} name=\"age\" onChange={(e) => user.inputChange(e)}/>\n      <button>Add User</button>\n  </div>\n  <div>\n    <h2>View Users</h2>\n    {users1}\n  </div>\n  </>)\n}\n\nclass User {\n  @observable name: string = '';\n  @observable surname: string = '';\n  @observable age: string = '';\n  inputChange(e): void {\n\n  }\n}\nlet user = new User()\nexport default App;\n"]},"metadata":{},"sourceType":"module"}